# 读取配置文件并设置变量
while IFS='=' read -r key value; do
  # 忽略空行和注释行
  if [[ -n "$key" && ! "$key" =~ ^# ]]; then
    export "$key"="$value"
  fi
done < config

compress_mode=$1
compress_para=$2
o_path="$3"
d_path="$4"
file_name="$(basename "$o_path")"
media_type=".${file_name##*.}"
media_type=$(echo "$media_type" | tr '[:upper:]' '[:lower:]')

if [ -z "$d_path" ]; then
    d_path="$(dirname "$o_path")/${file_name%.*}${compress_mode}$compress_para$media_type"
elif [ -d "$d_path" ]; then
    d_path="$d_path/${file_name%.*}${compress_mode}$compress_para$media_type"
fi

if [[ $media_type == '.mp4' || $media_type == '.mov' ]]; then
    if [[ $compress_mode == '-c' ]]; then
        ffmpeg -i "$o_path" -vcodec libx264 -crf "$compress_para" -preset fast -acodec aac -b:a 128k "./$temp_local/$file_name"
    elif [[ $compress_mode == '-b' ]]; then
        ffmpeg -i "$o_path" -c:v h264_videotoolbox -b:v "${compress_para}M" -c:a aac -b:a 128k "./$temp_local/$file_name"
    else
        echo "Unsupported compress mode: $compress_mode"
        exit
    fi
elif  [[ $media_type == '.m4a' || $media_type == '.mp3' ]]; then
    if [[ $compress_mode == '-b' ]]; then
        ffmpeg -i "$o_path" -vn -c:a aac -b:a ${compress_para}k -f ipod "./$temp_local/$file_name"
    else
        echo "Unsupported compress mode: $compress_mode"
        exit
    fi
elif  [[ $media_type == '.gif' ]]; then
    if [[ $compress_mode == '-r' ]]; then
        # both wide and len exceed $protect_dim_gif, this option will
        # both wide and len exceed $forbid_dim_gif, and wide or len exceed $protect_dim_gif, this option will
        # you can change $protect_dim_gif and $forbid_dim_gif in config

        wide_and_len=$(identify -format "%w %h" "$o_path[0]")
        wide=$(echo "$wide_and_len" | cut -d' ' -f1)
        len=$(echo "$wide_and_len" | cut -d' ' -f2)
        
        if [[ $protect_dim_gif -lt $wide && $protect_dim_gif -lt $len ]]; then
            wide=$(echo "$wide * $compress_para" | bc -l | xargs printf "%.0f")
            len=$(echo "$len * $compress_para" | bc -l | xargs printf "%.0f")
            gifsicle -O3 --colors 256 --resize ${wide}x${len} "$o_path" -o "./$temp_local/$file_name"
        else
            if [[ $forbid_dim_gif -lt $wide && $forbid_dim_gif -lt $len ]]; then
                if [[ $protect_dim_gif -lt $wide || $protect_dim_gif -lt $len ]]; then
                    wide=$(echo "$wide * $compress_para" | bc -l | xargs printf "%.0f")
                    len=$(echo "$len * $compress_para" | bc -l | xargs printf "%.0f")
                    gifsicle -O3 --colors 256 --resize ${wide}x${len} "$o_path" -o "./$temp_local/$file_name"
                else
                    file_name_without_ext="${file_name%.*}"
                    file_name=${file_name_without_ext}${compress_mode}${compress_para}_failed_{protect_dim_gif}${media_type}
                    d_path="$(dirname "$d_path")/${file_name}"
                    cp "$o_path" "./$temp_local/$file_name"
                fi 
            else
                file_name_without_ext="${file_name%.*}"
                file_name=${file_name_without_ext}${compress_mode}${compress_para}_failed_{forbid_dim_gif}${media_type}
                d_path="$(dirname "$d_path")/${file_name}"
                cp "$o_path" "./$temp_local/$file_name"
            fi
        fi
    elif [[ $compress_mode == '-f' ]]; then
        mod_base=10
        fps_compress_per=$(echo "10 * $compress_para" | bc -l | xargs printf "%.0f")
        # 计算要保留的帧位置(加权居中分布)
        picks=()
        for ((i=0; i<fps_compress_per; i++)); do
            index=$(( (i * mod_base + fps_compress_per / 2) / fps_compress_per )) 
            echo $index
            picks+=("$index")
        done
        
        # 构建 select 表达式：eq(mod(n\,10)\,x1)+eq(mod(n\,10)\,x2)+...
        expr=""
        for pick in "${picks[@]}"; do
            [[ -n "$expr" ]] && expr+="+"
            expr+="eq(mod(n\\,$mod_base)\,$pick)"
        done

        ffmpeg -i "$o_path" -vf "select='${expr}',setpts=N/FRAME_RATE/TB" -vsync 0 "./$temp_local/$file_name"
    else
        echo "Unsupported compress mode: $compress_mode"
        exit
    fi
elif  [[ $media_type == '.heic' ]]; then
    if [[ $compress_mode == '-q' ]]; then
        file_name="${file_name%.*}".jpg
        d_path="${d_path%.*}".jpg
        ffmpeg -i "$o_path" -frames:v 1 -qscale:v $compress_para 
        convert "$o_path" -quality $compress_para "./$temp_local/$file_name"
    elif [[ $compress_mode == '-j' ]]; then
        file_name="${file_name%.*}".jpg
        d_path="${d_path%.*}".jpg
        sips -s format jpeg -s formatOptions $compress_para "$o_path" --out "./$temp_local/$file_name"
    else
        echo "Unsupported compress mode: $compress_mode"
        exit
    fi
elif  [[ $media_type == '.png' || $media_type == '.jpg' || $media_type == '.jpeg' ]]; then
    if [[ $compress_mode == '-j' ]]; then
        file_name="${file_name%.*}".jpg
        d_path="${d_path%.*}".jpg
        sips -s format jpeg -s formatOptions $compress_para "$o_path" --out "./$temp_local/$file_name"
    else
        echo "Unsupported compress mode: $compress_mode"
        exit
    fi
else
    echo "Unsupported file type: ${file_name##*.}" >&2
    exit
fi

exiftool -TagsFromFile "$o_path" -all:all -overwrite_original "./$temp_local/$file_name"

mv "./$temp_local/$file_name" "$d_path"
